{"version":3,"sources":["pages/Today/Today.js","pages/Total/Total.js","components/Nav.js","pages/Yesterday/Yesterday.js","pages/News.js","pages/Home.js","components/FetchData.js","App.js","reportWebVitals.js","index.js"],"names":["Today","newDeaths","newCases","className","Total","totalDeaths","totalCases","lastUpdate","totalRecovered","moment","calendar","Nav","to","Yesterday","yesterdayCases","yesterdayDeaths","locale","News","articles","map","article","rel","target","href","webUrl","webTitle","sectionName","type","webPublicationDate","format","id","Home","Footer","time","FetchData","useState","setTotalDeaths","setTotalCases","setTotalRecovered","setLastUpdate","setNewCases","setNewDeaths","loading","setLoading","setYesterdayDeaths","setYesterdayCases","setArticles","useEffect","a","twoDays","subtract","oneDay","fetch","res1","json","cases","deaths","last_update","recovered","res2","new_cases","new_deaths","res3","dayTwo","res4","dayOne","news","newsJson","response","results","fetchCovidData","path","exact","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81da235c.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../Today/Today.css'\r\n\r\nconst Today = ({newDeaths, newCases}) => {\r\n  return (\r\n    <div className=\"cases-container\">\r\n      <div className=\"left\">\r\n        <p className=\"caseText deaths-left\">Today's Deaths</p><h2>{newDeaths}</h2>\r\n      </div>\r\n      <div className=\"right\">\r\n  <p className=\"casesText cases-right\">Today's Cases</p> <h2>{newCases}</h2> \r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Today\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Total = ({ totalDeaths, totalCases,lastUpdate, totalRecovered}) => {\r\n  return (\r\n    <div>\r\n  <div className=\"total-container\">\r\n\r\n    <div className=\"left\">\r\n  <p className=\"caseText deaths-left\">Total Deaths</p><h2>{totalDeaths}</h2>\r\n    </div>\r\n    <div className=\"centre\">\r\n  <p className=\"casesText cases-right\">Total Cases</p> <h2>{totalCases}</h2> \r\n    </div>\r\n    <div className=\"right\">\r\n  <p className=\"casesText cases-right\">Recovered</p> <h2>{totalRecovered}</h2> \r\n    </div>\r\n  </div>\r\n  \r\n  <p className=\"date-update\">Last Update {moment(lastUpdate).calendar()}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Total\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav className=\"nav\">\r\n\r\n      <ul>\r\n\r\n        <Link to='/'>\r\n          <li>Home</li>\r\n        </Link>\r\n        <Link to='/today'>\r\n         <li>Today</li>\r\n        </Link>\r\n        <Link to='/yesterday'>\r\n         <li>Yesterday</li>\r\n        </Link>\r\n        \r\n        <Link to='/news'>\r\n         <li>News</li>\r\n        </Link>\r\n        \r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","const Yesterday = ({yesterdayCases, yesterdayDeaths}) => {\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div className=\"cases-container\">\r\n      <div className=\"left\">\r\n  <p className=\"caseText deaths-left\">Yesterday's Deaths</p><h2>{yesterdayDeaths} </h2>\r\n      </div>\r\n      <div className=\"right\">\r\n  <p className=\"casesText cases-right\">Yesterday's Cases</p> <h2>{yesterdayCases}</h2> \r\n      </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Yesterday\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nmoment.locale();\r\n\r\nconst News = ({articles}) => (\r\n  // console.log(articles)\r\n  \r\n<div className=\"news-grid\">\r\n  \r\n{articles.map(article => \r\n<div key={article.id} className=\"news-div\">\r\n    <a rel=\"noreferrer\" target=\"_blank\" href={article.webUrl}> <h2>{article.webTitle}</h2> </a> \r\n    <div className=\"news-info-box\">\r\n      <h5>{article.sectionName}</h5>\r\n      <h5>{article.type}</h5>\r\n      <h5>{moment(article.webPublicationDate).format('Do MMMM  YYYY')}</h5>\r\n    </div>\r\n</div>)}\r\n\r\n  \r\n </div> \r\n);\r\n    \r\n\r\n\r\n\r\n\r\nexport default News","import React from 'react'\r\n\r\nconst Home = ({totalDeaths}) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"homepage-title\">Covid-19 UK Figures</h1>\r\n      <p className=\"hp-paragraph\">Well it's been one hell of a year, unfortunately there has been over <strong>{totalDeaths}</strong> deaths so far and there is still a way to go before any vaccine is delivered in any great numbers to the population. </p>\r\n      <p className=\"hp-paragraph\">This has been an awful year for so many families who have lost loved ones, but less not forget our wonderful NHS, the people who keep that running deserve a bloody medal and a good pay rise.</p>\r\n\r\n      <p className=\"hp-paragraph\">As the year comes to a close and 2021 begins, I think it's vital that we keep vigilant against this awful virus and keep washing our hands, keep 2 metres apart and WEAR A MASK to protect other around us. Hopefully 2021 will be better year than this, but it's still not going to return normal for a long time.  </p>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport {useEffect, useState} from 'react'\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport Today from '../pages/Today/Today'\r\nimport Total from '../pages/Total/Total'\r\nimport Nav from '../components/Nav'\r\nimport moment from 'moment'\r\nimport Yesterday from '../pages/Yesterday/Yesterday'\r\nimport News from '../pages/News'\r\nimport Home from '../pages/Home'\r\n\r\n\r\nconst FetchData = () => {\r\n  // const [newSplitDate, setNewSplitDate]  = useState()\r\n  // const [countryName, setCountryName] = useState()\r\n  // const [countryCode, setCountryCode] = useState()\r\n  const [totalDeaths, setTotalDeaths] = useState()\r\n  const [totalCases, setTotalCases] = useState()\r\n  const [totalRecovered, setTotalRecovered] = useState()\r\n  const [lastUpdate, setLastUpdate] = useState()\r\n  const [newCases, setNewCases] = useState()\r\n  const [newDeaths, setNewDeaths] = useState()\r\n  const [loading, setLoading] = useState(false)\r\n  const [yesterdayDeaths, setYesterdayDeaths] = useState()\r\n  const [yesterdayCases, setYesterdayCases] = useState()\r\n  const [articles, setArticles] = useState([])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n     const fetchCovidData = async () => {\r\n\r\n      setLoading(true)\r\n\r\n      // converts today's date in moment js format and then subracts 1 and 2 days from it \r\n      let twoDays = moment().subtract(2, 'days').format('YYYY-MM-DD');\r\n      let oneDay = moment().subtract(1, 'days').format('YYYY-MM-DD');\r\n\r\n\r\n      const  res1 = await fetch(`https://covid19-api.org/api/status/gb`)\r\n      const {cases, deaths, last_update, recovered } = await res1.json()\r\n    //  fetchs the difference for the selected country on deaths and cases \r\n      const res2 = await fetch('https://covid19-api.org/api/diff/gb')\r\n      const {new_cases, new_deaths} = await res2.json()\r\n      \r\n      // fetches the deaths and cases from yesterday and day before to subtract one from the other.\r\n      const res3 = await fetch(`https://covid19-api.org/api/status/gb?date=${twoDays}`)\r\n      const dayTwo = (await res3.json())\r\n      const res4 = await fetch(`https://covid19-api.org/api/status/gb?date=${oneDay}`)\r\n      const dayOne = (await res4.json())\r\n\r\n      const yesterdayDeaths = dayOne.deaths  - dayTwo.deaths\r\n      const yesterdayCases = dayOne.cases - dayTwo.cases\r\n\r\n\r\n       // fetch the news \r\n\r\n       const news = await fetch('https://content.guardianapis.com/search?q=%22coronavirus%22&api-key=9b549b4d-9451-47fb-aed2-a99a8f8c0562')\r\n       const newsJson = await news.json()\r\n       const articles = newsJson.response.results\r\n       \r\n\r\n    // sets the state \r\n      setTotalDeaths(deaths)\r\n      setTotalCases(cases)\r\n      setTotalRecovered(recovered)\r\n      setLastUpdate(last_update)\r\n      setNewCases(new_cases)\r\n      setNewDeaths(new_deaths)\r\n      setYesterdayCases(yesterdayCases)\r\n      setArticles(articles)\r\n      setYesterdayDeaths(yesterdayDeaths)\r\n      \r\n      setLoading(false)\r\n\r\n\r\n    }\r\n    \r\n    fetchCovidData()\r\n\r\n  }, [])\r\n  return (\r\n    <Router>\r\n      <Nav />\r\n      <div>\r\n        <Switch>\r\n          <Route path='/'  exact render={ () => <Home totalDeaths={totalDeaths} /> } /> \r\n          <Route path=\"/today\" render={ () => <Today newDeaths={newDeaths}  newCases={newCases}/> } />\r\n          <Route path=\"/yesterday\" render={ () => <Yesterday yesterdayCases={yesterdayCases} yesterdayDeaths={yesterdayDeaths}/> } />\r\n          <Route path='/news'  render={ () => <News articles={articles}/> } />\r\n          <Route path='/news/:id' />\r\n        </Switch>\r\n\r\n        {!loading ? <Total  totalDeaths={totalDeaths} totalCases={totalCases} lastUpdate={lastUpdate} totalRecovered={totalRecovered} /> : <h1 className=\"loading\">Loading...</h1>}\r\n        \r\n        <Footer  /> \r\n       </div>\r\n    </Router>\r\n   \r\n   \r\n  );\r\n}\r\n\r\nconst Footer = ({time}) => (\r\n  \r\n  <div className=\"footer\">\r\n    \r\n    <p className=\"year\">Copyright &copy; { moment().format('YYYY')} Chris Clark </p>\r\n  </div>\r\n)\r\n\r\nexport default FetchData\r\n","import './App.css';\n\nimport FetchData from './components/FetchData'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n      <FetchData /> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}